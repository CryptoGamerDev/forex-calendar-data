//+------------------------------------------------------------------+
//| Economic Calendar Loader (Optimized).mq5                        |
//+------------------------------------------------------------------+
input string CalendarURL = "https://raw.githubusercontent.com/TwojaNazwa/Repo/main/forex_data_simple.csv";

struct EconomicEvent
{
    string title;
    string country;
    datetime eventTime;
    int importance;
    double forecast;
    double previous;
};

EconomicEvent events[];

//+------------------------------------------------------------------+
//| Parsowanie zoptymalizowanego CSV                               |
//+------------------------------------------------------------------+
bool LoadOptimizedCalendar()
{
    string file_path = TerminalInfoString(TERMINAL_DATA_PATH) + "\\MQL5\\Files\\economic_calendar.csv";
    int file_handle = FileOpen("economic_calendar.csv", FILE_READ|FILE_CSV|FILE_ANSI, ',');
    
    if(file_handle == INVALID_HANDLE)
        return false;
    
    // Pomijaj nagłówek
    FileReadString(file_handle);
    
    int event_count = 0;
    while(!FileIsEnding(file_handle))
    {
        string data = FileReadString(file_handle);
        string fields[];
        int fields_count = StringSplit(data, ',', fields);
        
        if(fields_count >= 7)
        {
            ArrayResize(events, event_count + 1);
            
            events[event_count].title = fields[0];
            events[event_count].country = fields[1];
            
            // Łatwe parsowanie daty i czasu
            string datetime_str = fields[2] + " " + fields[3];
            events[event_count].eventTime = StringToTime(datetime_str);
            
            // Bezpośrednie konwersje
            events[event_count].importance = (int)StringToInteger(fields[4]);
            events[event_count].forecast = StringToDouble(fields[5]);
            events[event_count].previous = StringToDouble(fields[6]);
            
            event_count++;
        }
    }
    
    FileClose(file_handle);
    
    Print("Loaded ", event_count, " economic events");
    return event_count > 0;
}

//+------------------------------------------------------------------+
//| Przykład użycia - znajdź nadchodzące ważne wydarzenia          |
//+------------------------------------------------------------------+
void CheckUpcomingEvents()
{
    datetime now = TimeCurrent();
    datetime next24h = now + 86400;
    
    for(int i = 0; i < ArraySize(events); i++)
    {
        if(events[i].importance >= 2 && 
           events[i].eventTime > now && 
           events[i].eventTime <= next24h)
        {
            string message = StringFormat("HIGH IMPACT: %s at %s (Forecast: %.1f, Previous: %.1f)",
                events[i].title,
                TimeToString(events[i].eventTime),
                events[i].forecast,
                events[i].previous);
            
            Print(message);
            // Tutaj możesz dodać logikę tradingową
        }
    }
}
